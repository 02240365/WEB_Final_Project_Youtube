{"ast":null,"code":"import { createLocalStorage, THEME_PREFERENCE, QueryDevtoolsContext, PiPProvider, ThemeContext, ParentPanel, ContentView } from '../chunk/HASRA6WW.js';\nimport { getPreferredColorScheme, createMemo, createComponent } from '../chunk/HR7YXZ5H.js';\n\n// src/DevtoolsPanelComponent.tsx\nvar DevtoolsPanelComponent = props => {\n  const [localStore, setLocalStore] = createLocalStorage({\n    prefix: \"TanstackQueryDevtools\"\n  });\n  const colorScheme = getPreferredColorScheme();\n  const theme = createMemo(() => {\n    const preference = localStore.theme_preference || THEME_PREFERENCE;\n    if (preference !== \"system\") return preference;\n    return colorScheme();\n  });\n  return createComponent(QueryDevtoolsContext.Provider, {\n    value: props,\n    get children() {\n      return createComponent(PiPProvider, {\n        disabled: true,\n        localStore,\n        setLocalStore,\n        get children() {\n          return createComponent(ThemeContext.Provider, {\n            value: theme,\n            get children() {\n              return createComponent(ParentPanel, {\n                get children() {\n                  return createComponent(ContentView, {\n                    localStore,\n                    setLocalStore,\n                    get onClose() {\n                      return props.onClose;\n                    },\n                    showPanelViewOnly: true\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  });\n};\nvar DevtoolsPanelComponent_default = DevtoolsPanelComponent;\nexport { DevtoolsPanelComponent_default as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}