{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/sonamzangmo/Downloads/youtube-clone/frontend/src/components/videos/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport \"./VideoPlayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  videoUrl,\n  thumbnailUrl,\n  title\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const videoRef = useRef(null);\n\n  // Simple URL construction for port 5001\n  const getVideoSrc = () => {\n    if (!videoUrl) return \"\";\n\n    // If it's already a full URL, use it\n    if (videoUrl.startsWith(\"http\")) {\n      return videoUrl;\n    }\n\n    // Remove leading slash if present and construct URL\n    const cleanUrl = videoUrl.startsWith(\"/\") ? videoUrl.substring(1) : videoUrl;\n    return `http://localhost:5001/${cleanUrl}`;\n  };\n  const videoSrc = getVideoSrc();\n  useEffect(() => {\n    console.log(\"VideoPlayer - Original URL:\", videoUrl);\n    console.log(\"VideoPlayer - Constructed URL:\", videoSrc);\n  }, [videoUrl, videoSrc]);\n  const handleError = e => {\n    console.error(\"Video error:\", e);\n    setError(\"Cannot play this video\");\n    setIsLoading(false);\n  };\n  const handleLoadStart = () => {\n    setIsLoading(true);\n    setError(null);\n  };\n  const handleCanPlay = () => {\n    setIsLoading(false);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Video Unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"debug-url\",\n          children: [\"URL: \", videoSrc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Refresh Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player-wrapper\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading video...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"video-player\",\n      src: videoSrc,\n      poster: thumbnailUrl,\n      controls: true,\n      preload: \"metadata\",\n      onError: handleError,\n      onLoadStart: handleLoadStart,\n      onCanPlay: handleCanPlay,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: videoSrc,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n        src: videoSrc,\n        type: \"video/webm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n        src: videoSrc,\n        type: \"video/ogg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"3PDWW9Q4gjEDuzmMQHuDixJhT0o=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useRef","useEffect","jsxDEV","_jsxDEV","VideoPlayer","videoUrl","thumbnailUrl","title","error","setError","isLoading","setIsLoading","videoRef","getVideoSrc","startsWith","cleanUrl","substring","videoSrc","console","log","handleError","e","handleLoadStart","handleCanPlay","className","children","fileName","lineNumber","columnNumber","onClick","window","location","reload","ref","src","poster","controls","preload","onError","onLoadStart","onCanPlay","style","width","height","type","_c","$RefreshReg$"],"sources":["/Users/sonamzangmo/Downloads/youtube-clone/frontend/src/components/videos/VideoPlayer.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useRef, useEffect } from \"react\"\nimport \"./VideoPlayer.css\"\n\nconst VideoPlayer = ({ videoUrl, thumbnailUrl, title }) => {\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const videoRef = useRef(null)\n\n  // Simple URL construction for port 5001\n  const getVideoSrc = () => {\n    if (!videoUrl) return \"\"\n\n    // If it's already a full URL, use it\n    if (videoUrl.startsWith(\"http\")) {\n      return videoUrl\n    }\n\n    // Remove leading slash if present and construct URL\n    const cleanUrl = videoUrl.startsWith(\"/\") ? videoUrl.substring(1) : videoUrl\n    return `http://localhost:5001/${cleanUrl}`\n  }\n\n  const videoSrc = getVideoSrc()\n\n  useEffect(() => {\n    console.log(\"VideoPlayer - Original URL:\", videoUrl)\n    console.log(\"VideoPlayer - Constructed URL:\", videoSrc)\n  }, [videoUrl, videoSrc])\n\n  const handleError = (e) => {\n    console.error(\"Video error:\", e)\n    setError(\"Cannot play this video\")\n    setIsLoading(false)\n  }\n\n  const handleLoadStart = () => {\n    setIsLoading(true)\n    setError(null)\n  }\n\n  const handleCanPlay = () => {\n    setIsLoading(false)\n  }\n\n  if (error) {\n    return (\n      <div className=\"video-player-error\">\n        <div className=\"error-content\">\n          <h3>Video Unavailable</h3>\n          <p>{error}</p>\n          <p className=\"debug-url\">URL: {videoSrc}</p>\n          <button onClick={() => window.location.reload()}>Refresh Page</button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"video-player-wrapper\">\n      {isLoading && (\n        <div className=\"video-loading-overlay\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading video...</p>\n        </div>\n      )}\n\n      <video\n        ref={videoRef}\n        className=\"video-player\"\n        src={videoSrc}\n        poster={thumbnailUrl}\n        controls\n        preload=\"metadata\"\n        onError={handleError}\n        onLoadStart={handleLoadStart}\n        onCanPlay={handleCanPlay}\n        style={{ width: \"100%\", height: \"auto\" }}\n      >\n        <source src={videoSrc} type=\"video/mp4\" />\n        <source src={videoSrc} type=\"video/webm\" />\n        <source src={videoSrc} type=\"video/ogg\" />\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  )\n}\n\nexport default VideoPlayer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}