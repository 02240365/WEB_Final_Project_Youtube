{"ast":null,"code":"\"use client\";import{useState,useEffect}from\"react\";import\"./Home.css\";import VideoCard from\"../components/videos/VideoCard\";import{fetchVideos,fetchChannels}from\"../services/api\";import{toast}from\"react-toastify\";// Category filter options\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const categories=[\"All\",\"Music\",\"Gaming\",\"News\",\"Sports\",\"Entertainment\",\"Education\",\"Science & Technology\",\"Comedy\",\"Movies\",\"Anime\",\"Cooking\",\"Travel\",\"Fashion\",\"Fitness\"];function Home(){const[videos,setVideos]=useState([]);const[channels,setChannels]=useState({});const[selectedCategory,setSelectedCategory]=useState(\"All\");const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Fetch videos and channel data on component mount\nuseEffect(()=>{loadVideos();},[selectedCategory]);const loadVideos=async()=>{try{setLoading(true);setError(null);// Fetch videos based on selected category\nconst videosData=await fetchVideos({category:selectedCategory===\"All\"?undefined:selectedCategory,limit:20});setVideos(videosData);// Fetch channel data for all videos\nconst channelIds=[...new Set(videosData.map(video=>video.channelId))];const channelsData=await fetchChannels(channelIds);// Convert array to object for easier lookup\nconst channelsMap={};channelsData.forEach(channel=>{channelsMap[channel.id]=channel;});setChannels(channelsMap);}catch(error){console.error(\"Error loading videos:\",error);setError(\"Failed to load videos. Please try again.\");toast.error(\"Failed to load videos\");}finally{setLoading(false);}};// Handle category selection\nconst handleCategorySelect=category=>{setSelectedCategory(category);};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"home\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"home__loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"home__loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading videos...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"home\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"home__error\",children:[/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:loadVideos,className:\"home__retry-btn\",children:\"Try Again\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"home\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"home__categories\",children:categories.map(category=>/*#__PURE__*/_jsx(\"button\",{className:\"home__category-btn \".concat(selectedCategory===category?\"home__category-btn--active\":\"\"),onClick:()=>handleCategorySelect(category),children:category},category))}),/*#__PURE__*/_jsx(\"div\",{className:\"home__videos\",children:videos.length>0?videos.map(video=>/*#__PURE__*/_jsx(VideoCard,{video:video,channelData:channels[video.channelId]||{},layout:\"grid\"},video.id)):/*#__PURE__*/_jsx(\"div\",{className:\"home__no-videos\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No videos found for this category.\"})})})]});}export default Home;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}