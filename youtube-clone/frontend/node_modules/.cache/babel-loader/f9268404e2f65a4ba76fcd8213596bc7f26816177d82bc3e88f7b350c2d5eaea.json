{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/sonamzangmo/Desktop/WEB_Final_Project_Youtube/youtube-clone/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/sonamzangmo/Desktop/WEB_Final_Project_Youtube/youtube-clone/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"/Users/sonamzangmo/Desktop/WEB_Final_Project_Youtube/youtube-clone/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nvar _client, _onlineManager, _queryFlavor, _version, _isMounted, _styleNonce, _shadowDOMTarget, _buttonPosition, _position, _initialIsOpen, _errorTypes, _Component, _dispose, _client2, _onlineManager2, _queryFlavor2, _version2, _isMounted2, _styleNonce2, _shadowDOMTarget2, _buttonPosition2, _position2, _initialIsOpen2, _errorTypes2, _onClose, _Component2, _dispose2;\nimport { createSignal, render, lazy, setupStyleSheet, createComponent, mergeProps } from './chunk/HR7YXZ5H.js';\n\n// src/TanstackQueryDevtools.tsx\nvar TanstackQueryDevtools = (_client = /*#__PURE__*/new WeakMap(), _onlineManager = /*#__PURE__*/new WeakMap(), _queryFlavor = /*#__PURE__*/new WeakMap(), _version = /*#__PURE__*/new WeakMap(), _isMounted = /*#__PURE__*/new WeakMap(), _styleNonce = /*#__PURE__*/new WeakMap(), _shadowDOMTarget = /*#__PURE__*/new WeakMap(), _buttonPosition = /*#__PURE__*/new WeakMap(), _position = /*#__PURE__*/new WeakMap(), _initialIsOpen = /*#__PURE__*/new WeakMap(), _errorTypes = /*#__PURE__*/new WeakMap(), _Component = /*#__PURE__*/new WeakMap(), _dispose = /*#__PURE__*/new WeakMap(), class TanstackQueryDevtools {\n  constructor(config) {\n    _classPrivateFieldInitSpec(this, _client, void 0);\n    _classPrivateFieldInitSpec(this, _onlineManager, void 0);\n    _classPrivateFieldInitSpec(this, _queryFlavor, void 0);\n    _classPrivateFieldInitSpec(this, _version, void 0);\n    _classPrivateFieldInitSpec(this, _isMounted, false);\n    _classPrivateFieldInitSpec(this, _styleNonce, void 0);\n    _classPrivateFieldInitSpec(this, _shadowDOMTarget, void 0);\n    _classPrivateFieldInitSpec(this, _buttonPosition, void 0);\n    _classPrivateFieldInitSpec(this, _position, void 0);\n    _classPrivateFieldInitSpec(this, _initialIsOpen, void 0);\n    _classPrivateFieldInitSpec(this, _errorTypes, void 0);\n    _classPrivateFieldInitSpec(this, _Component, void 0);\n    _classPrivateFieldInitSpec(this, _dispose, void 0);\n    const {\n      client,\n      queryFlavor,\n      version,\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget\n    } = config;\n    _classPrivateFieldSet(_client, this, createSignal(client));\n    _classPrivateFieldSet(_queryFlavor, this, queryFlavor);\n    _classPrivateFieldSet(_version, this, version);\n    _classPrivateFieldSet(_onlineManager, this, onlineManager);\n    _classPrivateFieldSet(_styleNonce, this, styleNonce);\n    _classPrivateFieldSet(_shadowDOMTarget, this, shadowDOMTarget);\n    _classPrivateFieldSet(_buttonPosition, this, createSignal(buttonPosition));\n    _classPrivateFieldSet(_position, this, createSignal(position));\n    _classPrivateFieldSet(_initialIsOpen, this, createSignal(initialIsOpen));\n    _classPrivateFieldSet(_errorTypes, this, createSignal(errorTypes));\n  }\n  setButtonPosition(position) {\n    _classPrivateFieldGet(_buttonPosition, this)[1](position);\n  }\n  setPosition(position) {\n    _classPrivateFieldGet(_position, this)[1](position);\n  }\n  setInitialIsOpen(isOpen) {\n    _classPrivateFieldGet(_initialIsOpen, this)[1](isOpen);\n  }\n  setErrorTypes(errorTypes) {\n    _classPrivateFieldGet(_errorTypes, this)[1](errorTypes);\n  }\n  setClient(client) {\n    _classPrivateFieldGet(_client, this)[1](client);\n  }\n  mount(el) {\n    if (_classPrivateFieldGet(_isMounted, this)) {\n      throw new Error(\"Devtools is already mounted\");\n    }\n    const dispose = render(() => {\n      const _self$ = this;\n      const [btnPosition] = _classPrivateFieldGet(_buttonPosition, this);\n      const [pos] = _classPrivateFieldGet(_position, this);\n      const [isOpen] = _classPrivateFieldGet(_initialIsOpen, this);\n      const [errors] = _classPrivateFieldGet(_errorTypes, this);\n      const [queryClient] = _classPrivateFieldGet(_client, this);\n      let Devtools;\n      if (_classPrivateFieldGet(_Component, this)) {\n        Devtools = _classPrivateFieldGet(_Component, this);\n      } else {\n        Devtools = lazy(() => import('./DevtoolsComponent/I3HPI4QX.js'));\n        _classPrivateFieldSet(_Component, this, Devtools);\n      }\n      setupStyleSheet(_classPrivateFieldGet(_styleNonce, this), _classPrivateFieldGet(_shadowDOMTarget, this));\n      return createComponent(Devtools, mergeProps({\n        get queryFlavor() {\n          return _classPrivateFieldGet(_queryFlavor, _self$);\n        },\n        get version() {\n          return _classPrivateFieldGet(_version, _self$);\n        },\n        get onlineManager() {\n          return _classPrivateFieldGet(_onlineManager, _self$);\n        },\n        get shadowDOMTarget() {\n          return _classPrivateFieldGet(_shadowDOMTarget, _self$);\n        }\n      }, {\n        get client() {\n          return queryClient();\n        },\n        get buttonPosition() {\n          return btnPosition();\n        },\n        get position() {\n          return pos();\n        },\n        get initialIsOpen() {\n          return isOpen();\n        },\n        get errorTypes() {\n          return errors();\n        }\n      }));\n    }, el);\n    _classPrivateFieldSet(_isMounted, this, true);\n    _classPrivateFieldSet(_dispose, this, dispose);\n  }\n  unmount() {\n    var _classPrivateFieldGet2;\n    if (!_classPrivateFieldGet(_isMounted, this)) {\n      throw new Error(\"Devtools is not mounted\");\n    }\n    (_classPrivateFieldGet2 = _classPrivateFieldGet(_dispose, this)) === null || _classPrivateFieldGet2 === void 0 || _classPrivateFieldGet2.call(this);\n    _classPrivateFieldSet(_isMounted, this, false);\n  }\n});\n\n// src/TanstackQueryDevtoolsPanel.tsx\nvar TanstackQueryDevtoolsPanel = (_client2 = /*#__PURE__*/new WeakMap(), _onlineManager2 = /*#__PURE__*/new WeakMap(), _queryFlavor2 = /*#__PURE__*/new WeakMap(), _version2 = /*#__PURE__*/new WeakMap(), _isMounted2 = /*#__PURE__*/new WeakMap(), _styleNonce2 = /*#__PURE__*/new WeakMap(), _shadowDOMTarget2 = /*#__PURE__*/new WeakMap(), _buttonPosition2 = /*#__PURE__*/new WeakMap(), _position2 = /*#__PURE__*/new WeakMap(), _initialIsOpen2 = /*#__PURE__*/new WeakMap(), _errorTypes2 = /*#__PURE__*/new WeakMap(), _onClose = /*#__PURE__*/new WeakMap(), _Component2 = /*#__PURE__*/new WeakMap(), _dispose2 = /*#__PURE__*/new WeakMap(), class TanstackQueryDevtoolsPanel {\n  constructor(config) {\n    _classPrivateFieldInitSpec(this, _client2, void 0);\n    _classPrivateFieldInitSpec(this, _onlineManager2, void 0);\n    _classPrivateFieldInitSpec(this, _queryFlavor2, void 0);\n    _classPrivateFieldInitSpec(this, _version2, void 0);\n    _classPrivateFieldInitSpec(this, _isMounted2, false);\n    _classPrivateFieldInitSpec(this, _styleNonce2, void 0);\n    _classPrivateFieldInitSpec(this, _shadowDOMTarget2, void 0);\n    _classPrivateFieldInitSpec(this, _buttonPosition2, void 0);\n    _classPrivateFieldInitSpec(this, _position2, void 0);\n    _classPrivateFieldInitSpec(this, _initialIsOpen2, void 0);\n    _classPrivateFieldInitSpec(this, _errorTypes2, void 0);\n    _classPrivateFieldInitSpec(this, _onClose, void 0);\n    _classPrivateFieldInitSpec(this, _Component2, void 0);\n    _classPrivateFieldInitSpec(this, _dispose2, void 0);\n    const {\n      client,\n      queryFlavor,\n      version,\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget,\n      onClose\n    } = config;\n    _classPrivateFieldSet(_client2, this, createSignal(client));\n    _classPrivateFieldSet(_queryFlavor2, this, queryFlavor);\n    _classPrivateFieldSet(_version2, this, version);\n    _classPrivateFieldSet(_onlineManager2, this, onlineManager);\n    _classPrivateFieldSet(_styleNonce2, this, styleNonce);\n    _classPrivateFieldSet(_shadowDOMTarget2, this, shadowDOMTarget);\n    _classPrivateFieldSet(_buttonPosition2, this, createSignal(buttonPosition));\n    _classPrivateFieldSet(_position2, this, createSignal(position));\n    _classPrivateFieldSet(_initialIsOpen2, this, createSignal(initialIsOpen));\n    _classPrivateFieldSet(_errorTypes2, this, createSignal(errorTypes));\n    _classPrivateFieldSet(_onClose, this, createSignal(onClose));\n  }\n  setButtonPosition(position) {\n    _classPrivateFieldGet(_buttonPosition2, this)[1](position);\n  }\n  setPosition(position) {\n    _classPrivateFieldGet(_position2, this)[1](position);\n  }\n  setInitialIsOpen(isOpen) {\n    _classPrivateFieldGet(_initialIsOpen2, this)[1](isOpen);\n  }\n  setErrorTypes(errorTypes) {\n    _classPrivateFieldGet(_errorTypes2, this)[1](errorTypes);\n  }\n  setClient(client) {\n    _classPrivateFieldGet(_client2, this)[1](client);\n  }\n  setOnClose(onClose) {\n    _classPrivateFieldGet(_onClose, this)[1](() => onClose);\n  }\n  mount(el) {\n    if (_classPrivateFieldGet(_isMounted2, this)) {\n      throw new Error(\"Devtools is already mounted\");\n    }\n    const dispose = render(() => {\n      const _self$ = this;\n      const [btnPosition] = _classPrivateFieldGet(_buttonPosition2, this);\n      const [pos] = _classPrivateFieldGet(_position2, this);\n      const [isOpen] = _classPrivateFieldGet(_initialIsOpen2, this);\n      const [errors] = _classPrivateFieldGet(_errorTypes2, this);\n      const [queryClient] = _classPrivateFieldGet(_client2, this);\n      const [onClose] = _classPrivateFieldGet(_onClose, this);\n      let Devtools;\n      if (_classPrivateFieldGet(_Component2, this)) {\n        Devtools = _classPrivateFieldGet(_Component2, this);\n      } else {\n        Devtools = lazy(() => import('./DevtoolsPanelComponent/CXEL7IU7.js'));\n        _classPrivateFieldSet(_Component2, this, Devtools);\n      }\n      setupStyleSheet(_classPrivateFieldGet(_styleNonce2, this), _classPrivateFieldGet(_shadowDOMTarget2, this));\n      return createComponent(Devtools, mergeProps({\n        get queryFlavor() {\n          return _classPrivateFieldGet(_queryFlavor2, _self$);\n        },\n        get version() {\n          return _classPrivateFieldGet(_version2, _self$);\n        },\n        get onlineManager() {\n          return _classPrivateFieldGet(_onlineManager2, _self$);\n        },\n        get shadowDOMTarget() {\n          return _classPrivateFieldGet(_shadowDOMTarget2, _self$);\n        }\n      }, {\n        get client() {\n          return queryClient();\n        },\n        get buttonPosition() {\n          return btnPosition();\n        },\n        get position() {\n          return pos();\n        },\n        get initialIsOpen() {\n          return isOpen();\n        },\n        get errorTypes() {\n          return errors();\n        },\n        get onClose() {\n          return onClose();\n        }\n      }));\n    }, el);\n    _classPrivateFieldSet(_isMounted2, this, true);\n    _classPrivateFieldSet(_dispose2, this, dispose);\n  }\n  unmount() {\n    var _classPrivateFieldGet3;\n    if (!_classPrivateFieldGet(_isMounted2, this)) {\n      throw new Error(\"Devtools is not mounted\");\n    }\n    (_classPrivateFieldGet3 = _classPrivateFieldGet(_dispose2, this)) === null || _classPrivateFieldGet3 === void 0 || _classPrivateFieldGet3.call(this);\n    _classPrivateFieldSet(_isMounted2, this, false);\n  }\n});\nexport { TanstackQueryDevtools, TanstackQueryDevtoolsPanel };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}