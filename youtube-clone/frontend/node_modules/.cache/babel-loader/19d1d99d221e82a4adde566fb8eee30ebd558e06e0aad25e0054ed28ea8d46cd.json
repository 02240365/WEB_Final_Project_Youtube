{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/sonamzangmo/Downloads/youtube-clone/frontend/src/components/videos/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport \"./VideoPlayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  videoUrl,\n  thumbnailUrl,\n  title\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showControls, setShowControls] = useState(true);\n  const videoRef = useRef(null);\n  const videoContainerRef = useRef(null);\n\n  // Debug logging\n  useEffect(() => {\n    console.log(\"VideoPlayer received:\", {\n      videoUrl,\n      thumbnailUrl,\n      title\n    });\n  }, [videoUrl, thumbnailUrl, title]);\n\n  // Format time display\n  const formatTime = time => {\n    if (!time || isNaN(time)) return \"0:00\";\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\n  };\n\n  // Handle play/pause\n  const togglePlay = async () => {\n    if (!videoRef.current || error) return;\n    try {\n      if (isPlaying) {\n        videoRef.current.pause();\n      } else {\n        await videoRef.current.play();\n      }\n    } catch (err) {\n      console.error(\"Error toggling play:\", err);\n      setError(`Playback error: ${err.message}`);\n    }\n  };\n\n  // Handle time update\n  const handleTimeUpdate = () => {\n    if (videoRef.current) {\n      setCurrentTime(videoRef.current.currentTime);\n    }\n  };\n\n  // Handle seeking\n  const handleSeek = e => {\n    if (!videoRef.current || !duration) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const percentage = clickX / rect.width;\n    const newTime = percentage * duration;\n    videoRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n\n  // Handle volume change\n  const handleVolumeChange = e => {\n    const newVolume = Number.parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (videoRef.current) {\n      videoRef.current.volume = newVolume;\n    }\n  };\n\n  // Video event handlers\n  const handleLoadStart = () => {\n    console.log(\"Video loading started\");\n    setIsLoading(true);\n    setError(null);\n  };\n  const handleLoadedMetadata = () => {\n    console.log(\"Video metadata loaded\");\n    if (videoRef.current) {\n      setDuration(videoRef.current.duration);\n    }\n  };\n  const handleCanPlay = () => {\n    console.log(\"Video can play\");\n    setIsLoading(false);\n  };\n  const handleError = e => {\n    var _videoRef$current;\n    console.error(\"Video error:\", e);\n    const videoError = (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.error;\n    let message = \"Unable to load video\";\n    if (videoError) {\n      switch (videoError.code) {\n        case videoError.MEDIA_ERR_ABORTED:\n          message = \"Video playback was aborted\";\n          break;\n        case videoError.MEDIA_ERR_NETWORK:\n          message = \"Network error - check your connection\";\n          break;\n        case videoError.MEDIA_ERR_DECODE:\n          message = \"Video format not supported\";\n          break;\n        case videoError.MEDIA_ERR_SRC_NOT_SUPPORTED:\n          message = \"Video source not supported\";\n          break;\n        default:\n          message = videoError.message || \"Unknown video error\";\n      }\n    }\n    console.error(\"Video error details:\", {\n      code: videoError === null || videoError === void 0 ? void 0 : videoError.code,\n      message: videoError === null || videoError === void 0 ? void 0 : videoError.message,\n      videoUrl\n    });\n    setError(message);\n    setIsLoading(false);\n  };\n  const handlePlay = () => {\n    setIsPlaying(true);\n  };\n  const handlePause = () => {\n    setIsPlaying(false);\n  };\n  const handleEnded = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n  };\n\n  // Prepare video URL\n  const getVideoUrl = () => {\n    var _process$env$REACT_AP;\n    if (!videoUrl) return \"\";\n\n    // If it's already a full URL, return it\n    if (videoUrl.startsWith(\"http\")) {\n      return videoUrl;\n    }\n\n    // If it's a relative URL, prepend the base URL\n    const baseUrl = ((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace(\"/api\", \"\")) || \"http://localhost:5001\";\n\n    // Ensure proper URL formatting\n    if (videoUrl.startsWith(\"/\")) {\n      return `${baseUrl}${videoUrl}`;\n    } else {\n      return `${baseUrl}/${videoUrl}`;\n    }\n  };\n  const fullVideoUrl = getVideoUrl();\n\n  // Show error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player video-player--error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-player__error\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-player__error-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unable to play video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-player__error-url\",\n          children: [\"URL: \", fullVideoUrl]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"video-player__retry-btn\",\n          onClick: () => {\n            setError(null);\n            setIsLoading(true);\n            if (videoRef.current) {\n              videoRef.current.load();\n            }\n          },\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player\",\n    ref: videoContainerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"video-player__video\",\n      src: fullVideoUrl,\n      poster: thumbnailUrl,\n      onLoadStart: handleLoadStart,\n      onLoadedMetadata: handleLoadedMetadata,\n      onCanPlay: handleCanPlay,\n      onTimeUpdate: handleTimeUpdate,\n      onError: handleError,\n      onPlay: handlePlay,\n      onPause: handlePause,\n      onEnded: handleEnded,\n      preload: \"metadata\",\n      crossOrigin: \"anonymous\",\n      controls: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player__loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-player__spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading video...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this), !isPlaying && !isLoading && !error && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"video-player__play-overlay\",\n      onClick: togglePlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-player__play-icon\",\n        children: \"\\u25B6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `video-player__controls ${showControls ? \"video-player__controls--visible\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-player__progress-container\",\n        onClick: handleSeek,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-player__progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-player__progress-fill\",\n            style: {\n              width: `${duration ? currentTime / duration * 100 : 0}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-player__controls-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-player__controls-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"video-player__control-btn\",\n            onClick: togglePlay,\n            children: isPlaying ? \"⏸\" : \"▶\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-player__volume\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"video-player__control-btn\",\n              children: volume === 0 ? \"🔇\" : \"🔊\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.1\",\n              value: volume,\n              onChange: handleVolumeChange,\n              className: \"video-player__volume-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-player__time\",\n            children: [formatTime(currentTime), \" / \", formatTime(duration)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), process.env.NODE_ENV === \"development\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player__debug\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Original URL: \", videoUrl, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), \"Full URL: \", fullVideoUrl, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), \"Loading: \", isLoading ? \"Yes\" : \"No\", \" | Error: \", error ? \"Yes\" : \"No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"XrpXu0X5dGTUy2mRCKh20VsRnug=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useRef","useEffect","jsxDEV","_jsxDEV","VideoPlayer","videoUrl","thumbnailUrl","title","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","isLoading","setIsLoading","error","setError","showControls","setShowControls","videoRef","videoContainerRef","console","log","formatTime","time","isNaN","minutes","Math","floor","seconds","toString","padStart","togglePlay","current","pause","play","err","message","handleTimeUpdate","handleSeek","e","rect","currentTarget","getBoundingClientRect","clickX","clientX","left","percentage","width","newTime","handleVolumeChange","newVolume","Number","parseFloat","target","value","handleLoadStart","handleLoadedMetadata","handleCanPlay","handleError","_videoRef$current","videoError","code","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","handlePlay","handlePause","handleEnded","getVideoUrl","_process$env$REACT_AP","startsWith","baseUrl","process","env","REACT_APP_API_URL","replace","fullVideoUrl","className","children","fileName","lineNumber","columnNumber","onClick","load","ref","src","poster","onLoadStart","onLoadedMetadata","onCanPlay","onTimeUpdate","onError","onPlay","onPause","onEnded","preload","crossOrigin","controls","style","type","min","max","step","onChange","NODE_ENV","_c","$RefreshReg$"],"sources":["/Users/sonamzangmo/Downloads/youtube-clone/frontend/src/components/videos/VideoPlayer.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useRef, useEffect } from \"react\"\nimport \"./VideoPlayer.css\"\n\nconst VideoPlayer = ({ videoUrl, thumbnailUrl, title }) => {\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [currentTime, setCurrentTime] = useState(0)\n  const [duration, setDuration] = useState(0)\n  const [volume, setVolume] = useState(1)\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [showControls, setShowControls] = useState(true)\n\n  const videoRef = useRef(null)\n  const videoContainerRef = useRef(null)\n\n  // Debug logging\n  useEffect(() => {\n    console.log(\"VideoPlayer received:\", { videoUrl, thumbnailUrl, title })\n  }, [videoUrl, thumbnailUrl, title])\n\n  // Format time display\n  const formatTime = (time) => {\n    if (!time || isNaN(time)) return \"0:00\"\n    const minutes = Math.floor(time / 60)\n    const seconds = Math.floor(time % 60)\n    return `${minutes}:${seconds.toString().padStart(2, \"0\")}`\n  }\n\n  // Handle play/pause\n  const togglePlay = async () => {\n    if (!videoRef.current || error) return\n\n    try {\n      if (isPlaying) {\n        videoRef.current.pause()\n      } else {\n        await videoRef.current.play()\n      }\n    } catch (err) {\n      console.error(\"Error toggling play:\", err)\n      setError(`Playback error: ${err.message}`)\n    }\n  }\n\n  // Handle time update\n  const handleTimeUpdate = () => {\n    if (videoRef.current) {\n      setCurrentTime(videoRef.current.currentTime)\n    }\n  }\n\n  // Handle seeking\n  const handleSeek = (e) => {\n    if (!videoRef.current || !duration) return\n\n    const rect = e.currentTarget.getBoundingClientRect()\n    const clickX = e.clientX - rect.left\n    const percentage = clickX / rect.width\n    const newTime = percentage * duration\n\n    videoRef.current.currentTime = newTime\n    setCurrentTime(newTime)\n  }\n\n  // Handle volume change\n  const handleVolumeChange = (e) => {\n    const newVolume = Number.parseFloat(e.target.value)\n    setVolume(newVolume)\n    if (videoRef.current) {\n      videoRef.current.volume = newVolume\n    }\n  }\n\n  // Video event handlers\n  const handleLoadStart = () => {\n    console.log(\"Video loading started\")\n    setIsLoading(true)\n    setError(null)\n  }\n\n  const handleLoadedMetadata = () => {\n    console.log(\"Video metadata loaded\")\n    if (videoRef.current) {\n      setDuration(videoRef.current.duration)\n    }\n  }\n\n  const handleCanPlay = () => {\n    console.log(\"Video can play\")\n    setIsLoading(false)\n  }\n\n  const handleError = (e) => {\n    console.error(\"Video error:\", e)\n    const videoError = videoRef.current?.error\n    let message = \"Unable to load video\"\n\n    if (videoError) {\n      switch (videoError.code) {\n        case videoError.MEDIA_ERR_ABORTED:\n          message = \"Video playback was aborted\"\n          break\n        case videoError.MEDIA_ERR_NETWORK:\n          message = \"Network error - check your connection\"\n          break\n        case videoError.MEDIA_ERR_DECODE:\n          message = \"Video format not supported\"\n          break\n        case videoError.MEDIA_ERR_SRC_NOT_SUPPORTED:\n          message = \"Video source not supported\"\n          break\n        default:\n          message = videoError.message || \"Unknown video error\"\n      }\n    }\n\n    console.error(\"Video error details:\", {\n      code: videoError?.code,\n      message: videoError?.message,\n      videoUrl,\n    })\n\n    setError(message)\n    setIsLoading(false)\n  }\n\n  const handlePlay = () => {\n    setIsPlaying(true)\n  }\n\n  const handlePause = () => {\n    setIsPlaying(false)\n  }\n\n  const handleEnded = () => {\n    setIsPlaying(false)\n    setCurrentTime(0)\n  }\n\n  // Prepare video URL\n  const getVideoUrl = () => {\n    if (!videoUrl) return \"\"\n\n    // If it's already a full URL, return it\n    if (videoUrl.startsWith(\"http\")) {\n      return videoUrl\n    }\n\n    // If it's a relative URL, prepend the base URL\n    const baseUrl = process.env.REACT_APP_API_URL?.replace(\"/api\", \"\") || \"http://localhost:5001\"\n\n    // Ensure proper URL formatting\n    if (videoUrl.startsWith(\"/\")) {\n      return `${baseUrl}${videoUrl}`\n    } else {\n      return `${baseUrl}/${videoUrl}`\n    }\n  }\n\n  const fullVideoUrl = getVideoUrl()\n\n  // Show error state\n  if (error) {\n    return (\n      <div className=\"video-player video-player--error\">\n        <div className=\"video-player__error\">\n          <div className=\"video-player__error-icon\">⚠️</div>\n          <h3>Unable to play video</h3>\n          <p>{error}</p>\n          <p className=\"video-player__error-url\">URL: {fullVideoUrl}</p>\n          <button\n            className=\"video-player__retry-btn\"\n            onClick={() => {\n              setError(null)\n              setIsLoading(true)\n              if (videoRef.current) {\n                videoRef.current.load()\n              }\n            }}\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"video-player\" ref={videoContainerRef}>\n      <video\n        ref={videoRef}\n        className=\"video-player__video\"\n        src={fullVideoUrl}\n        poster={thumbnailUrl}\n        onLoadStart={handleLoadStart}\n        onLoadedMetadata={handleLoadedMetadata}\n        onCanPlay={handleCanPlay}\n        onTimeUpdate={handleTimeUpdate}\n        onError={handleError}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        preload=\"metadata\"\n        crossOrigin=\"anonymous\"\n        controls={false}\n      />\n\n      {isLoading && (\n        <div className=\"video-player__loading\">\n          <div className=\"video-player__spinner\"></div>\n          <p>Loading video...</p>\n        </div>\n      )}\n\n      {!isPlaying && !isLoading && !error && (\n        <button className=\"video-player__play-overlay\" onClick={togglePlay}>\n          <div className=\"video-player__play-icon\">▶</div>\n        </button>\n      )}\n\n      <div className={`video-player__controls ${showControls ? \"video-player__controls--visible\" : \"\"}`}>\n        <div className=\"video-player__progress-container\" onClick={handleSeek}>\n          <div className=\"video-player__progress-bar\">\n            <div\n              className=\"video-player__progress-fill\"\n              style={{ width: `${duration ? (currentTime / duration) * 100 : 0}%` }}\n            ></div>\n          </div>\n        </div>\n\n        <div className=\"video-player__controls-row\">\n          <div className=\"video-player__controls-left\">\n            <button className=\"video-player__control-btn\" onClick={togglePlay}>\n              {isPlaying ? \"⏸\" : \"▶\"}\n            </button>\n\n            <div className=\"video-player__volume\">\n              <button className=\"video-player__control-btn\">{volume === 0 ? \"🔇\" : \"🔊\"}</button>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.1\"\n                value={volume}\n                onChange={handleVolumeChange}\n                className=\"video-player__volume-slider\"\n              />\n            </div>\n\n            <div className=\"video-player__time\">\n              {formatTime(currentTime)} / {formatTime(duration)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Debug info in development */}\n      {process.env.NODE_ENV === \"development\" && (\n        <div className=\"video-player__debug\">\n          <small>\n            Original URL: {videoUrl}\n            <br />\n            Full URL: {fullVideoUrl}\n            <br />\n            Loading: {isLoading ? \"Yes\" : \"No\"} | Error: {error ? \"Yes\" : \"No\"}\n          </small>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default VideoPlayer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}