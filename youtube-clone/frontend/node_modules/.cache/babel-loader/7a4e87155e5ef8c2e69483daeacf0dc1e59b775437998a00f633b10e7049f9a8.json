{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/sonamzangmo/Desktop/WEB_Final_Project_Youtube/youtube-clone/frontend/src/components/videos/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport \"./VideoPlayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  videoUrl,\n  thumbnailUrl,\n  title\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const videoRef = useRef(null);\n\n  // Construct video URL - use the provided URL directly\n  const getVideoSrc = () => {\n    if (!videoUrl) {\n      console.log(\"No video URL provided\");\n      return null;\n    }\n    console.log(\"Using video URL:\", videoUrl);\n    return videoUrl;\n  };\n  const videoSrc = getVideoSrc();\n  useEffect(() => {\n    console.log(\"VideoPlayer - Using video source:\", videoSrc);\n    setIsLoading(false); // Don't pre-check, let video element handle it\n  }, [videoSrc]);\n  const handleVideoError = e => {\n    console.error(\"Video playback error:\", e);\n    const video = e.target;\n    if (video.error) {\n      console.error(\"Video error details:\", {\n        code: video.error.code,\n        message: video.error.message,\n        src: video.src\n      });\n    }\n    setError(\"Cannot play this video\");\n    setIsLoading(false);\n  };\n  const handleVideoLoad = () => {\n    console.log(\"Video loaded successfully\");\n    setIsLoading(false);\n    setError(null);\n  };\n  const handleVideoLoadStart = () => {\n    console.log(\"Video load started\");\n    setIsLoading(true);\n  };\n  const handleVideoCanPlay = () => {\n    console.log(\"Video can play\");\n    setIsLoading(false);\n  };\n  const handlePlay = () => {\n    setIsPlaying(true);\n  };\n  const handlePause = () => {\n    setIsPlaying(false);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Video Unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"debug-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Video URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), \" \", videoSrc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"retry-button\",\n          onClick: () => {\n            setError(null);\n            setIsLoading(true);\n            if (videoRef.current) {\n              videoRef.current.load();\n            }\n          },\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player-container\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading video...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"video-player\",\n      src: videoSrc,\n      poster: thumbnailUrl,\n      controls: true,\n      preload: \"metadata\",\n      onError: handleVideoError,\n      onLoadedData: handleVideoLoad,\n      onLoadStart: handleVideoLoadStart,\n      onCanPlay: handleVideoCanPlay,\n      onPlay: handlePlay,\n      onPause: handlePause,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: videoSrc,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"Ig+7qLJMZ4sotBXCl7PdsT8EM4w=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useRef","useEffect","jsxDEV","_jsxDEV","VideoPlayer","videoUrl","thumbnailUrl","title","error","setError","isLoading","setIsLoading","isPlaying","setIsPlaying","videoRef","getVideoSrc","console","log","videoSrc","handleVideoError","e","video","target","code","message","src","handleVideoLoad","handleVideoLoadStart","handleVideoCanPlay","handlePlay","handlePause","className","children","fileName","lineNumber","columnNumber","onClick","current","load","ref","poster","controls","preload","onError","onLoadedData","onLoadStart","onCanPlay","onPlay","onPause","style","width","height","type","_c","$RefreshReg$"],"sources":["/Users/sonamzangmo/Desktop/WEB_Final_Project_Youtube/youtube-clone/frontend/src/components/videos/VideoPlayer.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useRef, useEffect } from \"react\"\nimport \"./VideoPlayer.css\"\n\nconst VideoPlayer = ({ videoUrl, thumbnailUrl, title }) => {\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [isPlaying, setIsPlaying] = useState(false)\n  const videoRef = useRef(null)\n\n  // Construct video URL - use the provided URL directly\n  const getVideoSrc = () => {\n    if (!videoUrl) {\n      console.log(\"No video URL provided\")\n      return null\n    }\n\n    console.log(\"Using video URL:\", videoUrl)\n    return videoUrl\n  }\n\n  const videoSrc = getVideoSrc()\n\n  useEffect(() => {\n    console.log(\"VideoPlayer - Using video source:\", videoSrc)\n    setIsLoading(false) // Don't pre-check, let video element handle it\n  }, [videoSrc])\n\n  const handleVideoError = (e) => {\n    console.error(\"Video playback error:\", e)\n    const video = e.target\n    if (video.error) {\n      console.error(\"Video error details:\", {\n        code: video.error.code,\n        message: video.error.message,\n        src: video.src,\n      })\n    }\n    setError(\"Cannot play this video\")\n    setIsLoading(false)\n  }\n\n  const handleVideoLoad = () => {\n    console.log(\"Video loaded successfully\")\n    setIsLoading(false)\n    setError(null)\n  }\n\n  const handleVideoLoadStart = () => {\n    console.log(\"Video load started\")\n    setIsLoading(true)\n  }\n\n  const handleVideoCanPlay = () => {\n    console.log(\"Video can play\")\n    setIsLoading(false)\n  }\n\n  const handlePlay = () => {\n    setIsPlaying(true)\n  }\n\n  const handlePause = () => {\n    setIsPlaying(false)\n  }\n\n  if (error) {\n    return (\n      <div className=\"video-player-error\">\n        <div className=\"error-content\">\n          <div className=\"error-icon\">⚠️</div>\n          <h3>Video Unavailable</h3>\n          <p>{error}</p>\n          <div className=\"debug-info\">\n            <p>\n              <strong>Video URL:</strong> {videoSrc}\n            </p>\n          </div>\n          <button\n            className=\"retry-button\"\n            onClick={() => {\n              setError(null)\n              setIsLoading(true)\n              if (videoRef.current) {\n                videoRef.current.load()\n              }\n            }}\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"video-player-container\">\n      {isLoading && (\n        <div className=\"video-loading-overlay\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading video...</p>\n        </div>\n      )}\n\n      <video\n        ref={videoRef}\n        className=\"video-player\"\n        src={videoSrc}\n        poster={thumbnailUrl}\n        controls\n        preload=\"metadata\"\n        onError={handleVideoError}\n        onLoadedData={handleVideoLoad}\n        onLoadStart={handleVideoLoadStart}\n        onCanPlay={handleVideoCanPlay}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        style={{ width: \"100%\", height: \"auto\" }}\n      >\n        <source src={videoSrc} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  )\n}\n\nexport default VideoPlayer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}