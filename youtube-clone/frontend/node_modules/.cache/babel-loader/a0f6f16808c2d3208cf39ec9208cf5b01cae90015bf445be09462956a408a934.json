{"ast":null,"code":"// auth.js - Authentication service functions\n// Handles login, register, logout, and user management\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001/api\";\n\n// Helper function to handle API responses\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json().catch(() => ({\n      message: \"Network error\"\n    }));\n    throw new Error(error.message || `HTTP error! status: ${response.status}`);\n  }\n  return response.json();\n};\n\n// Login user\nexport const loginUser = async (email, password) => {\n  try {\n    console.log(\"Logging in user:\", email);\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await handleResponse(response);\n    console.log(\"Login successful:\", data);\n    return data.data;\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    throw error;\n  }\n};\n\n// Register user\nexport const registerUser = async userData => {\n  try {\n    console.log(\"Registering user:\", userData.email);\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    const data = await handleResponse(response);\n    console.log(\"Registration successful:\", data);\n    return data.data;\n  } catch (error) {\n    console.error(\"Registration error:\", error);\n    throw error;\n  }\n};\n\n// Logout user\nexport const logoutUser = async () => {\n  try {\n    const token = localStorage.getItem(\"authToken\");\n    if (!token) return;\n    console.log(\"Logging out user\");\n    const response = await fetch(`${API_BASE_URL}/auth/logout`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error(\"Logout error:\", error);\n    throw error;\n  }\n};\n\n// Get current user\nexport const getCurrentUser = async () => {\n  try {\n    const token = localStorage.getItem(\"authToken\");\n    if (!token) {\n      throw new Error(\"No auth token found\");\n    }\n    console.log(\"Fetching current user\");\n    const response = await fetch(`${API_BASE_URL}/auth/me`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await handleResponse(response);\n    console.log(\"Current user fetched:\", data);\n    return data.data.user;\n  } catch (error) {\n    console.error(\"Get current user error:\", error);\n    throw error;\n  }\n};\n\n// Update user profile\nexport const updateUserProfile = async userData => {\n  try {\n    const token = localStorage.getItem(\"authToken\");\n    if (!token) {\n      throw new Error(\"No auth token found\");\n    }\n\n    // Handle file uploads with FormData\n    const formData = new FormData();\n\n    // Add profile data\n    if (userData.firstName) formData.append(\"firstName\", userData.firstName);\n    if (userData.lastName) formData.append(\"lastName\", userData.lastName);\n    if (userData.username) formData.append(\"username\", userData.username);\n    if (userData.description) formData.append(\"description\", userData.description);\n    if (userData.channelName) formData.append(\"channelName\", userData.channelName);\n\n    // Add profile picture if provided\n    if (userData.profilePicture && userData.profilePicture instanceof File) {\n      formData.append(\"profilePicture\", userData.profilePicture);\n    }\n\n    // Add banner image if provided\n    if (userData.bannerImage && userData.bannerImage instanceof File) {\n      formData.append(\"bannerImage\", userData.bannerImage);\n    }\n    console.log(\"Updating user profile\");\n    const response = await fetch(`${API_BASE_URL}/users/profile`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: formData\n    });\n    const data = await handleResponse(response);\n    console.log(\"Profile updated:\", data);\n    return data.data;\n  } catch (error) {\n    console.error(\"Update profile error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","handleResponse","response","ok","error","json","catch","message","Error","status","loginUser","email","password","console","log","fetch","method","headers","body","JSON","stringify","data","registerUser","userData","logoutUser","token","localStorage","getItem","Authorization","getCurrentUser","user","updateUserProfile","formData","FormData","firstName","append","lastName","username","description","channelName","profilePicture","File","bannerImage"],"sources":["/Users/sonamzangmo/Desktop/WEB_Final_Project_Youtube/youtube-clone/frontend/src/services/auth.js"],"sourcesContent":["// auth.js - Authentication service functions\n// Handles login, register, logout, and user management\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001/api\"\n\n// Helper function to handle API responses\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    const error = await response.json().catch(() => ({ message: \"Network error\" }))\n    throw new Error(error.message || `HTTP error! status: ${response.status}`)\n  }\n  return response.json()\n}\n\n// Login user\nexport const loginUser = async (email, password) => {\n  try {\n    console.log(\"Logging in user:\", email)\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n\n    const data = await handleResponse(response)\n    console.log(\"Login successful:\", data)\n    return data.data\n  } catch (error) {\n    console.error(\"Login error:\", error)\n    throw error\n  }\n}\n\n// Register user\nexport const registerUser = async (userData) => {\n  try {\n    console.log(\"Registering user:\", userData.email)\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n\n    const data = await handleResponse(response)\n    console.log(\"Registration successful:\", data)\n    return data.data\n  } catch (error) {\n    console.error(\"Registration error:\", error)\n    throw error\n  }\n}\n\n// Logout user\nexport const logoutUser = async () => {\n  try {\n    const token = localStorage.getItem(\"authToken\")\n\n    if (!token) return\n\n    console.log(\"Logging out user\")\n    const response = await fetch(`${API_BASE_URL}/auth/logout`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n\n    return handleResponse(response)\n  } catch (error) {\n    console.error(\"Logout error:\", error)\n    throw error\n  }\n}\n\n// Get current user\nexport const getCurrentUser = async () => {\n  try {\n    const token = localStorage.getItem(\"authToken\")\n\n    if (!token) {\n      throw new Error(\"No auth token found\")\n    }\n\n    console.log(\"Fetching current user\")\n    const response = await fetch(`${API_BASE_URL}/auth/me`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n\n    const data = await handleResponse(response)\n    console.log(\"Current user fetched:\", data)\n    return data.data.user\n  } catch (error) {\n    console.error(\"Get current user error:\", error)\n    throw error\n  }\n}\n\n// Update user profile\nexport const updateUserProfile = async (userData) => {\n  try {\n    const token = localStorage.getItem(\"authToken\")\n\n    if (!token) {\n      throw new Error(\"No auth token found\")\n    }\n\n    // Handle file uploads with FormData\n    const formData = new FormData()\n\n    // Add profile data\n    if (userData.firstName) formData.append(\"firstName\", userData.firstName)\n    if (userData.lastName) formData.append(\"lastName\", userData.lastName)\n    if (userData.username) formData.append(\"username\", userData.username)\n    if (userData.description) formData.append(\"description\", userData.description)\n    if (userData.channelName) formData.append(\"channelName\", userData.channelName)\n\n    // Add profile picture if provided\n    if (userData.profilePicture && userData.profilePicture instanceof File) {\n      formData.append(\"profilePicture\", userData.profilePicture)\n    }\n\n    // Add banner image if provided\n    if (userData.bannerImage && userData.bannerImage instanceof File) {\n      formData.append(\"bannerImage\", userData.bannerImage)\n    }\n\n    console.log(\"Updating user profile\")\n    const response = await fetch(`${API_BASE_URL}/users/profile`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    })\n\n    const data = await handleResponse(response)\n    console.log(\"Profile updated:\", data)\n    return data.data\n  } catch (error) {\n    console.error(\"Update profile error:\", error)\n    throw error\n  }\n}\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO;MAAEC,OAAO,EAAE;IAAgB,CAAC,CAAC,CAAC;IAC/E,MAAM,IAAIC,KAAK,CAACJ,KAAK,CAACG,OAAO,IAAI,uBAAuBL,QAAQ,CAACO,MAAM,EAAE,CAAC;EAC5E;EACA,OAAOP,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMK,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,KAAK,CAAC;IACtC,MAAMT,QAAQ,GAAG,MAAMa,KAAK,CAAC,GAAGlB,YAAY,aAAa,EAAE;MACzDmB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMpB,cAAc,CAACC,QAAQ,CAAC;IAC3CW,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEO,IAAI,CAAC;IACtC,OAAOA,IAAI,CAACA,IAAI;EAClB,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACdS,OAAO,CAACT,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMkB,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACFV,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAES,QAAQ,CAACZ,KAAK,CAAC;IAChD,MAAMT,QAAQ,GAAG,MAAMa,KAAK,CAAC,GAAGlB,YAAY,gBAAgB,EAAE;MAC5DmB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,QAAQ;IAC/B,CAAC,CAAC;IAEF,MAAMF,IAAI,GAAG,MAAMpB,cAAc,CAACC,QAAQ,CAAC;IAC3CW,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEO,IAAI,CAAC;IAC7C,OAAOA,IAAI,CAACA,IAAI;EAClB,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACdS,OAAO,CAACT,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAI,CAACF,KAAK,EAAE;IAEZZ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,MAAMZ,QAAQ,GAAG,MAAMa,KAAK,CAAC,GAAGlB,YAAY,cAAc,EAAE;MAC1DmB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPW,aAAa,EAAE,UAAUH,KAAK;MAChC;IACF,CAAC,CAAC;IAEF,OAAOxB,cAAc,CAACC,QAAQ,CAAC;EACjC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdS,OAAO,CAACT,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMyB,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMJ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIjB,KAAK,CAAC,qBAAqB,CAAC;IACxC;IAEAK,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,MAAMZ,QAAQ,GAAG,MAAMa,KAAK,CAAC,GAAGlB,YAAY,UAAU,EAAE;MACtDoB,OAAO,EAAE;QACPW,aAAa,EAAE,UAAUH,KAAK;MAChC;IACF,CAAC,CAAC;IAEF,MAAMJ,IAAI,GAAG,MAAMpB,cAAc,CAACC,QAAQ,CAAC;IAC3CW,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEO,IAAI,CAAC;IAC1C,OAAOA,IAAI,CAACA,IAAI,CAACS,IAAI;EACvB,CAAC,CAAC,OAAO1B,KAAK,EAAE;IACdS,OAAO,CAACT,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAM2B,iBAAiB,GAAG,MAAOR,QAAQ,IAAK;EACnD,IAAI;IACF,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIjB,KAAK,CAAC,qBAAqB,CAAC;IACxC;;IAEA;IACA,MAAMwB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAE/B;IACA,IAAIV,QAAQ,CAACW,SAAS,EAAEF,QAAQ,CAACG,MAAM,CAAC,WAAW,EAAEZ,QAAQ,CAACW,SAAS,CAAC;IACxE,IAAIX,QAAQ,CAACa,QAAQ,EAAEJ,QAAQ,CAACG,MAAM,CAAC,UAAU,EAAEZ,QAAQ,CAACa,QAAQ,CAAC;IACrE,IAAIb,QAAQ,CAACc,QAAQ,EAAEL,QAAQ,CAACG,MAAM,CAAC,UAAU,EAAEZ,QAAQ,CAACc,QAAQ,CAAC;IACrE,IAAId,QAAQ,CAACe,WAAW,EAAEN,QAAQ,CAACG,MAAM,CAAC,aAAa,EAAEZ,QAAQ,CAACe,WAAW,CAAC;IAC9E,IAAIf,QAAQ,CAACgB,WAAW,EAAEP,QAAQ,CAACG,MAAM,CAAC,aAAa,EAAEZ,QAAQ,CAACgB,WAAW,CAAC;;IAE9E;IACA,IAAIhB,QAAQ,CAACiB,cAAc,IAAIjB,QAAQ,CAACiB,cAAc,YAAYC,IAAI,EAAE;MACtET,QAAQ,CAACG,MAAM,CAAC,gBAAgB,EAAEZ,QAAQ,CAACiB,cAAc,CAAC;IAC5D;;IAEA;IACA,IAAIjB,QAAQ,CAACmB,WAAW,IAAInB,QAAQ,CAACmB,WAAW,YAAYD,IAAI,EAAE;MAChET,QAAQ,CAACG,MAAM,CAAC,aAAa,EAAEZ,QAAQ,CAACmB,WAAW,CAAC;IACtD;IAEA7B,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,MAAMZ,QAAQ,GAAG,MAAMa,KAAK,CAAC,GAAGlB,YAAY,gBAAgB,EAAE;MAC5DmB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPW,aAAa,EAAE,UAAUH,KAAK;MAChC,CAAC;MACDP,IAAI,EAAEc;IACR,CAAC,CAAC;IAEF,MAAMX,IAAI,GAAG,MAAMpB,cAAc,CAACC,QAAQ,CAAC;IAC3CW,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEO,IAAI,CAAC;IACrC,OAAOA,IAAI,CAACA,IAAI;EAClB,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACdS,OAAO,CAACT,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}