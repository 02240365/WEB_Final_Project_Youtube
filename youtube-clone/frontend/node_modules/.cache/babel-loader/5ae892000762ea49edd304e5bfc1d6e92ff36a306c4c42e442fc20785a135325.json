{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/sonamzangmo/Downloads/youtube-clone/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { loginUser, registerUser, logoutUser, getCurrentUser } from \"../services/auth\";\nimport { toast } from \"react-toastify\";\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\n// Authentication provider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Check authentication status\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      if (token) {\n        const user = await getCurrentUser();\n        setCurrentUser(user);\n      }\n    } catch (error) {\n      console.error(\"Error checking auth status:\", error);\n      localStorage.removeItem(\"authToken\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await loginUser(email, password);\n      localStorage.setItem(\"authToken\", response.token);\n      setCurrentUser(response.user);\n      toast.success(\"Logged in successfully!\");\n      return response;\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      toast.error(error.message || \"Failed to log in\");\n      throw error;\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      const response = await registerUser(userData);\n      localStorage.setItem(\"authToken\", response.token);\n      setCurrentUser(response.user);\n      toast.success(\"Account created successfully!\");\n      return response;\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      toast.error(error.message || \"Failed to create account\");\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await logoutUser();\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"authToken\");\n      setCurrentUser(null);\n      toast.success(\"Logged out successfully\");\n    }\n  };\n\n  // Update user profile\n  const updateProfile = updatedUser => {\n    setCurrentUser(updatedUser);\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    updateProfile,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","loginUser","registerUser","logoutUser","getCurrentUser","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","context","Error","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","checkAuthStatus","token","localStorage","getItem","user","error","console","removeItem","login","email","password","response","setItem","success","message","register","userData","logout","updateProfile","updatedUser","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sonamzangmo/Downloads/youtube-clone/frontend/src/context/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\nimport { loginUser, registerUser, logoutUser, getCurrentUser } from \"../services/auth\"\nimport { toast } from \"react-toastify\"\n\n// Create the authentication context\nconst AuthContext = createContext()\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\n// Authentication provider component\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    checkAuthStatus()\n  }, [])\n\n  // Check authentication status\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\")\n      if (token) {\n        const user = await getCurrentUser()\n        setCurrentUser(user)\n      }\n    } catch (error) {\n      console.error(\"Error checking auth status:\", error)\n      localStorage.removeItem(\"authToken\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await loginUser(email, password)\n      localStorage.setItem(\"authToken\", response.token)\n      setCurrentUser(response.user)\n      toast.success(\"Logged in successfully!\")\n      return response\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      toast.error(error.message || \"Failed to log in\")\n      throw error\n    }\n  }\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      const response = await registerUser(userData)\n      localStorage.setItem(\"authToken\", response.token)\n      setCurrentUser(response.user)\n      toast.success(\"Account created successfully!\")\n      return response\n    } catch (error) {\n      console.error(\"Registration error:\", error)\n      toast.error(error.message || \"Failed to create account\")\n      throw error\n    }\n  }\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await logoutUser()\n    } catch (error) {\n      console.error(\"Logout error:\", error)\n    } finally {\n      localStorage.removeItem(\"authToken\")\n      setCurrentUser(null)\n      toast.success(\"Logged out successfully\")\n    }\n  }\n\n  // Update user profile\n  const updateProfile = (updatedUser) => {\n    setCurrentUser(updatedUser)\n  }\n\n  // Context value\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    updateProfile,\n    loading,\n  }\n\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}