{"ast":null,"code":"\"use client\";// Channel.jsx - Channel page component\n// Displays channel information and videos\nimport{useState,useEffect}from\"react\";import{useParams}from\"react-router-dom\";import\"./Channel.css\";import VideoCard from\"../components/videos/VideoCard\";import{fetchChannelById,fetchVideos,subscribeToChannel}from\"../services/api\";import{useAuth}from\"../context/AuthContext\";import{toast}from\"react-toastify\";import{formatDistanceToNow}from\"date-fns\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Channel(){const{channelId}=useParams();const{currentUser}=useAuth();const[channel,setChannel]=useState(null);const[videos,setVideos]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState(\"videos\");const[isSubscribed,setIsSubscribed]=useState(false);const[subscriberCount,setSubscriberCount]=useState(0);// Load channel data on component mount\nuseEffect(()=>{if(channelId){loadChannelData();}},[channelId]);const loadChannelData=async()=>{try{setLoading(true);setError(null);// Fetch channel details\nconst channelData=await fetchChannelById(channelId);setChannel(channelData);setSubscriberCount(channelData.subscribers||0);// Fetch channel videos\nconst videosData=await fetchVideos({channelId,limit:20});setVideos(videosData);// Check subscription status if user is logged in\nif(currentUser){// This would be an API call to check subscription status\n// setIsSubscribed(channelData.userSubscribed);\n}}catch(error){console.error(\"Error loading channel:\",error);setError(\"Failed to load channel. Please try again.\");toast.error(\"Failed to load channel\");}finally{setLoading(false);}};// Handle subscribe/unsubscribe\nconst handleSubscribe=async()=>{if(!currentUser){toast.error(\"Please sign in to subscribe\");return;}try{await subscribeToChannel(channelId,!isSubscribed);if(isSubscribed){setSubscriberCount(subscriberCount-1);setIsSubscribed(false);toast.success(\"Unsubscribed\");}else{setSubscriberCount(subscriberCount+1);setIsSubscribed(true);toast.success(\"Subscribed!\");}}catch(error){console.error(\"Error subscribing:\",error);toast.error(\"Failed to subscribe\");}};// Format subscriber count\nconst formatSubscriberCount=count=>{if(count>=1000000){return\"\".concat((count/1000000).toFixed(1),\"M\");}else if(count>=1000){return\"\".concat((count/1000).toFixed(1),\"K\");}return count.toString();};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"channel\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"channel__loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"channel__loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading channel...\"})]})});}if(error||!channel){return/*#__PURE__*/_jsx(\"div\",{className:\"channel\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"channel__error\",children:[/*#__PURE__*/_jsx(\"p\",{children:error||\"Channel not found\"}),/*#__PURE__*/_jsx(\"button\",{onClick:loadChannelData,className:\"channel__retry-btn\",children:\"Try Again\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"channel\",children:[channel.bannerImage&&/*#__PURE__*/_jsx(\"div\",{className:\"channel__banner\",children:/*#__PURE__*/_jsx(\"img\",{src:channel.bannerImage||\"/placeholder.svg\",alt:\"\".concat(channel.name,\" banner\"),className:\"channel__banner-image\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel__header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"channel__info\",children:[/*#__PURE__*/_jsx(\"img\",{src:channel.profilePicture||\"/default-avatar.png\",alt:channel.name,className:\"channel__avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel__details\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"channel__name\",children:[channel.name,channel.verified&&/*#__PURE__*/_jsx(\"span\",{className:\"channel__verified-badge\",children:\"\\u2713\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel__stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"channel__subscribers\",children:[formatSubscriberCount(subscriberCount),\" subscribers\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"channel__separator\",children:\"\\u2022\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"channel__video-count\",children:[videos.length,\" videos\"]}),channel.createdAt&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"channel__separator\",children:\"\\u2022\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"channel__joined\",children:[\"Joined \",formatDistanceToNow(new Date(channel.createdAt),{addSuffix:true})]})]})]}),channel.description&&/*#__PURE__*/_jsx(\"p\",{className:\"channel__description\",children:channel.description})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"channel__actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"channel__subscribe-btn \".concat(isSubscribed?\"channel__subscribe-btn--subscribed\":\"\"),onClick:handleSubscribe,children:isSubscribed?\"Subscribed\":\"Subscribe\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel__nav\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"channel__nav-item \".concat(activeTab===\"videos\"?\"channel__nav-item--active\":\"\"),onClick:()=>setActiveTab(\"videos\"),children:\"Videos\"}),/*#__PURE__*/_jsx(\"button\",{className:\"channel__nav-item \".concat(activeTab===\"playlists\"?\"channel__nav-item--active\":\"\"),onClick:()=>setActiveTab(\"playlists\"),children:\"Playlists\"}),/*#__PURE__*/_jsx(\"button\",{className:\"channel__nav-item \".concat(activeTab===\"about\"?\"channel__nav-item--active\":\"\"),onClick:()=>setActiveTab(\"about\"),children:\"About\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel__content\",children:[activeTab===\"videos\"&&/*#__PURE__*/_jsx(\"div\",{className:\"channel__videos\",children:videos.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"channel__videos-grid\",children:videos.map(video=>/*#__PURE__*/_jsx(VideoCard,{video:video,channelData:channel,layout:\"grid\"},video.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"channel__no-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"channel__no-content-icon\",children:\"\\uD83D\\uDCF9\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"channel__no-content-title\",children:\"No videos yet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"channel__no-content-text\",children:\"This channel hasn't uploaded any videos.\"})]})}),activeTab===\"playlists\"&&/*#__PURE__*/_jsx(\"div\",{className:\"channel__playlists\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"channel__no-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"channel__no-content-icon\",children:\"\\uD83D\\uDCCB\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"channel__no-content-title\",children:\"No playlists yet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"channel__no-content-text\",children:\"This channel hasn't created any playlists.\"})]})}),activeTab===\"about\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"channel__about\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"channel__about-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"channel__about-title\",children:\"Description\"}),/*#__PURE__*/_jsx(\"p\",{className:\"channel__about-text\",children:channel.description||\"No description available.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel__about-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"channel__about-title\",children:\"Stats\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel__about-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"channel__about-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"channel__about-stat-label\",children:\"Joined\"}),/*#__PURE__*/_jsx(\"span\",{className:\"channel__about-stat-value\",children:channel.createdAt?new Date(channel.createdAt).toLocaleDateString():\"Unknown\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel__about-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"channel__about-stat-label\",children:\"Total views\"}),/*#__PURE__*/_jsx(\"span\",{className:\"channel__about-stat-value\",children:channel.totalViews?formatSubscriberCount(channel.totalViews):\"0\"})]})]})]})]})]})]});}export default Channel;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}